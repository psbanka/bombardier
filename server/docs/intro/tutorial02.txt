.. _intro-tutorial02:


====================================================
Deploying your first package with Bombardier, part 2
====================================================

Create a machine definintion
----------------------------

It's time to get a machine working which we will deploy this new
SNMP package to. The first thing to do is to create a machine object,
using the ``create`` command again on the command-line interface:

  .. code-block:: bash

     peacemaker (admin)> create machine test_machine

Again, the system will present you with a default system configuration
in your favorite editor::

    ip_address: 127.0.0.1
    default_user: root
    platform: rhel5
    ~
    ~

Fill in the ``ip_address`` value with the one of the server that you
want to configure this package onto.  For the purposes of this
tutorial, if you don't have another computer, you can use
``127.0.0.1`` to install onto the server system itself.

The ``default_user`` option defines what user object Bombardier will
connect to this remote system as when performing administrative
actions.  If this is going to be something other than ``root``, make
sure that the remove user account has the rights to perform all the
actions that it needs to.

The ``platform`` option provides Bombardier some information about
what kind of operating-system the remote machine is running.  Some
packages can only be installed on certain platforms, and this value
will be checked by some packages before installing.  Some packages can
be installed on a number of different platforms and may take different
actions, depending on what this value is. Current options are:

:``rhel5``: 
  Redhad Linux 5
:``centos5``: 
  CentOS Linux 5 (a Redhat Linux clone)
:``ubuntu-hardy``:
  Ubuntu Linux 8.04 (a.k.a. "Hardy Heron")
:``cygwin``:
  Windows Cygwin 1.7

In addition, you can feel free to fill any value in this field that
you want, as it is primarily used by packages.

Initialize the remote machine for use with the server
-----------------------------------------------------

Now it's time to get the remote system talking to the server.  Let's
go into machine sub-interface mode and use the enable command.

.. code-block:: bash



